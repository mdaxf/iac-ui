{
  "version": 3,
  "sources": ["../../crc-32/crc32.js"],
  "sourcesContent": ["/* crc32.js (C) 2014-2015 SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\nvar CRC32;\n(function (factory) {\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t  factory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n}(function(CRC32) {\nCRC32.version = '0.3.0';\n/* see perf/crc32table.js */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar table = signed_crc_table();\n/* charCodeAt is the best approach for binary strings */\nvar use_buffer = typeof Buffer !== 'undefined';\nfunction crc32_bstr(bstr) {\n\tif(bstr.length > 32768) if(use_buffer) return crc32_buf_8(new Buffer(bstr));\n\tvar crc = -1, L = bstr.length - 1;\n\tfor(var i = 0; i < L;) {\n\t\tcrc =  table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ (crc >>> 8);\n\t\tcrc =  table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ (crc >>> 8);\n\t}\n\tif(i === L) crc = (crc >>> 8) ^ table[(crc ^ bstr.charCodeAt(i)) & 0xFF];\n\treturn crc ^ -1;\n}\n\nfunction crc32_buf(buf) {\n\tif(buf.length > 10000) return crc32_buf_8(buf);\n\tfor(var crc = -1, i = 0, L=buf.length-3; i < L;) {\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t}\n\twhile(i < L+3) crc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\treturn crc ^ -1;\n}\n\nfunction crc32_buf_8(buf) {\n\tfor(var crc = -1, i = 0, L=buf.length-7; i < L;) {\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t}\n\twhile(i < L+7) crc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\treturn crc ^ -1;\n}\n\n/* much much faster to intertwine utf8 and crc */\nfunction crc32_str(str) {\n\tfor(var crc = -1, i = 0, L=str.length, c, d; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ c) & 0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (192|((c>>6)&31))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(c&63))) & 0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++) & 1023;\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (240|((c>>8)&7))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((c>>2)&63))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((d>>6)&15)|(c&3))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(d&63))) & 0xFF];\n\t\t} else {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (224|((c>>12)&15))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((c>>6)&63))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(c&63))) & 0xFF];\n\t\t}\n\t}\n\treturn crc ^ -1;\n}\nCRC32.table = table;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\n}));\n"],
  "mappings": "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",
  "names": ["module", "CRC32", "table"]
}
