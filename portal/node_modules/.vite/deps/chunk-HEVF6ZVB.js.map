{
  "version": 3,
  "sources": ["../../@sentry/utils/src/node.ts", "../../@sentry/utils/src/is.ts", "../../@sentry/utils/src/string.ts", "../../@sentry/utils/src/misc.ts", "../../@sentry/utils/src/browser.ts", "../../@sentry/utils/node_modules/tslib/tslib.es6.js", "../../@sentry/utils/src/polyfill.ts", "../../@sentry/utils/src/error.ts", "../../@sentry/utils/src/dsn.ts", "../../@sentry/utils/src/logger.ts", "../../@sentry/utils/src/memo.ts", "../../@sentry/utils/src/stacktrace.ts", "../../@sentry/utils/src/object.ts", "../../@sentry/utils/src/supports.ts", "../../@sentry/utils/src/instrument.ts", "../../@sentry/utils/src/path.ts", "../../@sentry/utils/src/syncpromise.ts", "../../@sentry/utils/src/promisebuffer.ts", "../../@sentry/utils/src/time.ts", "../../@sentry/types/src/severity.ts", "../../@sentry/types/src/status.ts", "../../@sentry/types/src/loglevel.ts", "../../@sentry/types/src/session.ts", "../../@sentry/types/src/transaction.ts"],
  "sourcesContent": ["/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport { Primitive } from '@sentry/types';\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: any): boolean {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: any): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: any): boolean {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: any): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: any): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n", "import { isRegExp, isString } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const ll = newLine.length;\n  if (ll <= 150) {\n    return newLine;\n  }\n  if (colno > ll) {\n    // eslint-disable-next-line no-param-reassign\n    colno = ll;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, ll);\n  if (end > ll - 5) {\n    end = ll;\n  }\n  if (end === ll) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < ll) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return (pattern as RegExp).test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Integration, StackFrame, WrappedFunction } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\nimport { snipLine } from './string';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const originalConsole = (global as any).console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in (global as any).console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore Mechanism has no index signature\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n", "import { isString } from './is';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push(`#${elem.id}`);\n  }\n\n  // eslint-disable-next-line prefer-const\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push(`.${classes[i]}`);\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n", "import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n", "import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { SentryError } from './error';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\n/** Error message */\nconst ERROR_MESSAGE = 'Invalid Dsn';\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport class Dsn implements DsnComponents {\n  /** Protocol used to connect to Sentry. */\n  public protocol!: DsnProtocol;\n  /** Public authorization key (deprecated, renamed to publicKey). */\n  public user!: string;\n  /** Public authorization key. */\n  public publicKey!: string;\n  /** Private authorization key (deprecated, optional). */\n  public pass!: string;\n  /** Hostname of the Sentry instance. */\n  public host!: string;\n  /** Port of the Sentry instance. */\n  public port!: string;\n  /** Path */\n  public path!: string;\n  /** Project ID */\n  public projectId!: string;\n\n  /** Creates a new Dsn component */\n  public constructor(from: DsnLike) {\n    if (typeof from === 'string') {\n      this._fromString(from);\n    } else {\n      this._fromComponents(from);\n    }\n\n    this._validate();\n  }\n\n  /**\n   * Renders the string representation of this Dsn.\n   *\n   * By default, this will render the public representation without the password\n   * component. To get the deprecated private representation, set `withPassword`\n   * to true.\n   *\n   * @param withPassword When set to true, the password will be included.\n   */\n  public toString(withPassword: boolean = false): string {\n    const { host, path, pass, port, projectId, protocol, publicKey } = this;\n    return (\n      `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n      `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n    );\n  }\n\n  /** Parses a string into this Dsn. */\n  private _fromString(str: string): void {\n    const match = DSN_REGEX.exec(str);\n\n    if (!match) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n    let path = '';\n    let projectId = lastPath;\n\n    const split = projectId.split('/');\n    if (split.length > 1) {\n      path = split.slice(0, -1).join('/');\n      projectId = split.pop() as string;\n    }\n\n    if (projectId) {\n      const projectMatch = projectId.match(/^\\d+/);\n      if (projectMatch) {\n        projectId = projectMatch[0];\n      }\n    }\n\n    this._fromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n  }\n\n  /** Maps Dsn components into this instance. */\n  private _fromComponents(components: DsnComponents): void {\n    // TODO this is for backwards compatibility, and can be removed in a future version\n    if ('user' in components && !('publicKey' in components)) {\n      components.publicKey = components.user;\n    }\n    this.user = components.publicKey || '';\n\n    this.protocol = components.protocol;\n    this.publicKey = components.publicKey || '';\n    this.pass = components.pass || '';\n    this.host = components.host;\n    this.port = components.port || '';\n    this.path = components.path || '';\n    this.projectId = components.projectId;\n  }\n\n  /** Validates this Dsn and throws on error. */\n  private _validate(): void {\n    ['protocol', 'publicKey', 'host', 'projectId'].forEach(component => {\n      if (!this[component as keyof DsnComponents]) {\n        throw new SentryError(`${ERROR_MESSAGE}: ${component} missing`);\n      }\n    });\n\n    if (!this.projectId.match(/^\\d+$/)) {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid projectId ${this.projectId}`);\n    }\n\n    if (this.protocol !== 'http' && this.protocol !== 'https') {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid protocol ${this.protocol}`);\n    }\n\n    if (this.port && isNaN(parseInt(this.port, 10))) {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid port ${this.port}`);\n    }\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`);\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n", "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nexport class Memo {\n  /** Determines if WeakSet is available */\n  private readonly _hasWeakSet: boolean;\n  /** Either WeakSet or Array */\n  private readonly _inner: any;\n\n  public constructor() {\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  public memoize(obj: any): boolean {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < this._inner.length; i++) {\n      const value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  }\n\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  public unmemoize(obj: any): void {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (let i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n", "const defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { getFunctionName } from './stacktrace';\nimport { truncate } from './string';\n\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacementFactory A function that should be used to wrap a given method, returning the wrapped method which\n * will be substituted in for `source[name]`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry_original__: {\n          enumerable: false,\n          value: original,\n        },\n      });\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nfunction getWalkSource(\n  value: any,\n): {\n  [key: string]: any;\n} {\n  if (isError(value)) {\n    const error = value as ExtendedError;\n    const err: {\n      [key: string]: any;\n      stack: string | undefined;\n      message: string;\n      name: string;\n    } = {\n      message: error.message,\n      name: error.name,\n      stack: error.stack,\n    };\n\n    for (const i in error) {\n      if (Object.prototype.hasOwnProperty.call(error, i)) {\n        err[i] = error[i];\n      }\n    }\n\n    return err;\n  }\n\n  if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    const source: {\n      [key: string]: any;\n    } = {};\n\n    source.type = event.type;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      source.target = isElement(event.target)\n        ? htmlTreeAsString(event.target)\n        : Object.prototype.toString.call(event.target);\n    } catch (_oO) {\n      source.target = '<unknown>';\n    }\n\n    try {\n      source.currentTarget = isElement(event.currentTarget)\n        ? htmlTreeAsString(event.currentTarget)\n        : Object.prototype.toString.call(event.currentTarget);\n    } catch (_oO) {\n      source.currentTarget = '<unknown>';\n    }\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      source.detail = event.detail;\n    }\n\n    for (const i in event) {\n      if (Object.prototype.hasOwnProperty.call(event, i)) {\n        source[i] = event;\n      }\n    }\n\n    return source;\n  }\n\n  return value as {\n    [key: string]: any;\n  };\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/**\n * Transform any non-primitive, BigInt, or Symbol-type value into a string. Acts as a no-op on strings, numbers,\n * booleans, null, and undefined.\n *\n * @param value The value to stringify\n * @returns For non-primitive, BigInt, and Symbol-type values, a string denoting the value's type, type and value, or\n *  type and `description` property, respectively. For non-BigInt, non-Symbol primitives, returns the original value,\n *  unchanged.\n */\nfunction serializeValue(value: any): any {\n  const type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && value && typeof value === 'object' && ((value as unknown) as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  if (typeof value === 'number' && value !== value) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${getFunctionName(value)}]`;\n  }\n\n  // symbols and bigints are considered primitives by TS, but aren't natively JSON-serilaizable\n\n  if (typeof value === 'symbol') {\n    return `[${String(value)}]`;\n  }\n\n  if (typeof value === 'bigint') {\n    return `[BigInt: ${String(value)}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: Memo = new Memo()): any {\n  // If we reach the maximum depth, serialize whatever has left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // If value implements `toJSON` method, call it and return early\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n  const source = getWalkSource(value);\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo.unmemoize(value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function normalize(input: any, depth?: number): any {\n  try {\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  const keys = Object.keys(getWalkSource(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys<T>(val: T): T {\n  if (isPlainObject(val)) {\n    const obj = val as { [key: string]: any };\n    const rv: { [key: string]: any } = {};\n    for (const key of Object.keys(obj)) {\n      if (typeof obj[key] !== 'undefined') {\n        rv[key] = dropUndefinedKeys(obj[key]);\n      }\n    }\n    return rv as T;\n  }\n\n  if (Array.isArray(val)) {\n    return (val as any[]).map(dropUndefinedKeys) as any;\n  }\n\n  return val;\n}\n", "import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const global = getGlobalObject<Window>();\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === `function`) {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (global as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\n\nconst global = getGlobalObject<Window>();\n\n/** Object describing handler that will be triggered for a given `type` of instrumentation */\ninterface InstrumentHandler {\n  type: InstrumentHandlerType;\n  callback: InstrumentHandlerCallback;\n}\ntype InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\ntype InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      logger.warn('unknown instrumentation type:', type);\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler: InstrumentHandler): void {\n  if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n    return;\n  }\n  handlers[handler.type] = handlers[handler.type] || [];\n  (handlers[handler.type] as InstrumentHandlerCallback[]).push(handler.callback);\n  instrument(handler.type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      logger.error(\n        `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(\n          handler,\n        )}\\nError: ${e}`,\n      );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in global)) {\n    return;\n  }\n\n  ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function(level: string): void {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function(originalConsoleLevel: () => any): Function {\n      return function(...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function(originalFetch: () => void): () => void {\n    return function(...args: any[]): void {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(global, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\ntype XHRSendInput = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\n/** JSDoc */\ninterface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n    body?: XHRSendInput;\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs: any[] = []): string {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs: any[] = []): string {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  // Poor man's implementation of ES6 `Map`, tracking and keeping in sync key and value separately.\n  const requestKeys: XMLHttpRequest[] = [];\n  const requestValues: Array<any>[] = [];\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function(originalOpen: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhr.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function(): void {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            if (xhr.__sentry_xhr__) {\n              xhr.__sentry_xhr__.status_code = xhr.status;\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          try {\n            const requestPos = requestKeys.indexOf(xhr);\n            if (requestPos !== -1) {\n              // Make sure to pop both key and value to keep it in sync.\n              requestKeys.splice(requestPos);\n              const args = requestValues.splice(requestPos)[0];\n              if (xhr.__sentry_xhr__ && args[0] !== undefined) {\n                xhr.__sentry_xhr__.body = args[0] as XHRSendInput;\n              }\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function(original: WrappedFunction): Function {\n          return function(...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function(originalSend: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      requestKeys.push(this);\n      requestValues.push(args);\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = global.onpopstate;\n  global.onpopstate = function(this: WindowEventHandlers, ...args: any[]): any {\n    const to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      return oldOnPopState.apply(this, args);\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function(this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (global as any)[target] && (global as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(originalAddEventListener: AddEventListener): AddEventListener {\n      return function(\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n      return function(\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = el.__sentry_instrumentation_handlers__ || {};\n            const handlerForType = handlers[type];\n\n            if (handlerForType) {\n              handlerForType.refCount -= 1;\n              // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n              if (handlerForType.refCount <= 0) {\n                originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                handlerForType.handler = undefined;\n                delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n              }\n\n              // If there are no longer any custom handlers of any type on this element, cleanup everything.\n              if (Object.keys(handlers).length === 0) {\n                delete el.__sentry_instrumentation_handlers__;\n              }\n            }\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalRemoveEventListener.call(this, type, listener, options);\n      };\n    });\n  });\n}\n\nlet _oldOnErrorHandler: OnErrorEventHandler = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function(msg: any, url: any, line: any, column: any, error: any): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function(e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n", "// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://raw.githubusercontent.com/calvinmetcalf/rollup-plugin-node-builtins/master/src/es6/path.js\n\n/** JSDoc */\nfunction normalizeArray(parts: string[], allowAboveRoot?: boolean): string[] {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      // eslint-disable-next-line no-plusplus\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      // eslint-disable-next-line no-plusplus\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    // eslint-disable-next-line no-plusplus\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^/]+?|)(\\.[^./]*|))(?:[/]*)$/;\n/** JSDoc */\nfunction splitPath(filename: string): string[] {\n  const parts = splitPathRe.exec(filename);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nexport function resolve(...args: string[]): string {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr: string[]): string[] {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nexport function relative(from: string, to: string): string {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nexport function normalizePath(path: string): string {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.substr(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nexport function isAbsolute(path: string): boolean {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nexport function join(...args: string[]): string {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nexport function dirname(path: string): string {\n  const result = splitPath(path);\n  const root = result[0];\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nexport function basename(path: string, ext?: string): string {\n  let f = splitPath(path)[2];\n  if (ext && f.substr(ext.length * -1) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n", "/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    done: boolean;\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        done: false,\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve((val as unknown) as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    done: boolean;\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler.done) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        if (handler.onfulfilled) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler.onfulfilled((this._value as unknown) as any);\n        }\n      }\n\n      if (this._state === States.REJECTED) {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      }\n\n      handler.done = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n", "import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n\n/** A simple queue that holds promises. */\nexport class PromiseBuffer<T> {\n  /** Internal set of queued Promises */\n  private readonly _buffer: Array<PromiseLike<T>> = [];\n\n  public constructor(protected _limit?: number) {}\n\n  /**\n   * Says if the buffer is ready to take more requests\n   */\n  public isReady(): boolean {\n    return this._limit === undefined || this.length() < this._limit;\n  }\n\n  /**\n   * Add a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns The original promise.\n   */\n  public add(task: PromiseLike<T>): PromiseLike<T> {\n    if (!this.isReady()) {\n      return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n    if (this._buffer.indexOf(task) === -1) {\n      this._buffer.push(task);\n    }\n    task\n      .then(() => this.remove(task))\n      .then(null, () =>\n        this.remove(task).then(null, () => {\n          // We have to add this catch here otherwise we have an unhandledPromiseRejection\n          // because it's a new Promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Remove a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  public remove(task: PromiseLike<T>): PromiseLike<T> {\n    const removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n    return removedTask;\n  }\n\n  /**\n   * This function returns the number of unresolved promises in the queue.\n   */\n  public length(): number {\n    return this._buffer.length;\n  }\n\n  /**\n   * This will drain the whole queue, returns true if queue is empty or drained.\n   * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n   *\n   * @param timeout Number in ms to wait until it resolves with false.\n   */\n  public drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>(resolve => {\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n      SyncPromise.all(this._buffer)\n        .then(() => {\n          clearTimeout(capturedSetTimeout);\n          resolve(true);\n        })\n        .then(null, () => {\n          resolve(true);\n        });\n    });\n  }\n}\n", "import { getGlobalObject } from './misc';\nimport { dynamicRequire, isNodeEnv } from './node';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject<Window>();\n  if (!performance) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n\n  const timeOriginIsReliable =\n    performance.timeOrigin && Math.abs(performance.timeOrigin + performance.now() - Date.now()) < threshold;\n  if (timeOriginIsReliable) {\n    _browserPerformanceTimeOriginMode = 'timeOrigin';\n    return performance.timeOrigin;\n  }\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  const navigationStartIsReliable =\n    hasNavigationStart && Math.abs(navigationStart + performance.now() - Date.now()) < threshold;\n  if (navigationStartIsReliable) {\n    _browserPerformanceTimeOriginMode = 'navigationStart';\n    return navigationStart;\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return Date.now();\n})();\n", "/** JSDoc */\n// eslint-disable-next-line import/export\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace Severity {\n  /**\n   * Converts a string-based level into a {@link Severity}.\n   *\n   * @param level string representation of Severity\n   * @returns Severity\n   */\n  export function fromString(level: string): Severity {\n    switch (level) {\n      case 'debug':\n        return Severity.Debug;\n      case 'info':\n        return Severity.Info;\n      case 'warn':\n      case 'warning':\n        return Severity.Warning;\n      case 'error':\n        return Severity.Error;\n      case 'fatal':\n        return Severity.Fatal;\n      case 'critical':\n        return Severity.Critical;\n      case 'log':\n      default:\n        return Severity.Log;\n    }\n  }\n}\n", "/** The status of an event. */\n// eslint-disable-next-line import/export\nexport enum Status {\n  /** The status could not be determined. */\n  Unknown = 'unknown',\n  /** The event was skipped due to configuration or callbacks. */\n  Skipped = 'skipped',\n  /** The event was sent to Sentry successfully. */\n  Success = 'success',\n  /** The client is currently rate limited and will try again later. */\n  RateLimit = 'rate_limit',\n  /** The event could not be processed. */\n  Invalid = 'invalid',\n  /** A server-side error ocurred during submission. */\n  Failed = 'failed',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace Status {\n  /**\n   * Converts a HTTP status code into a {@link Status}.\n   *\n   * @param code The HTTP response status code.\n   * @returns The send status or {@link Status.Unknown}.\n   */\n  export function fromHttpCode(code: number): Status {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n}\n", "/** Console logging verbosity for the SDK. */\nexport enum LogLevel {\n  /** No logs will be generated. */\n  None = 0,\n  /** Only SDK internal errors will be logged. */\n  Error = 1,\n  /** Information useful for debugging the SDK will be logged. */\n  Debug = 2,\n  /** All SDK actions will be logged. */\n  Verbose = 3,\n}\n", "import { User } from './user';\n\n/**\n * @inheritdoc\n */\nexport interface Session extends SessionContext {\n  /** JSDoc */\n  update(context?: SessionContext): void;\n\n  /** JSDoc */\n  close(status?: SessionStatus): void;\n\n  /** JSDoc */\n  toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  };\n}\n\n/**\n * Session Context\n */\nexport interface SessionContext {\n  sid?: string;\n  did?: string;\n  init?: boolean;\n  timestamp?: number;\n  started?: number;\n  duration?: number;\n  status?: SessionStatus;\n  release?: string;\n  environment?: string;\n  userAgent?: string;\n  ipAddress?: string;\n  errors?: number;\n  user?: User | null;\n}\n\n/**\n * Session Status\n */\nexport enum SessionStatus {\n  /** JSDoc */\n  Ok = 'ok',\n  /** JSDoc */\n  Exited = 'exited',\n  /** JSDoc */\n  Crashed = 'crashed',\n  /** JSDoc */\n  Abnormal = 'abnormal',\n}\n", "import { ExtractedNodeRequestData, Primitive, WorkerLocation } from './misc';\nimport { Span, SpanContext } from './span';\n\n/**\n * Interface holding Transaction-specific properties\n */\nexport interface TransactionContext extends SpanContext {\n  /**\n   * Human-readable identifier for the transaction\n   */\n  name: string;\n\n  /**\n   * If true, sets the end timestamp of the transaction to the highest timestamp of child spans, trimming\n   * the duration of the transaction. This is useful to discard extra time in the transaction that is not\n   * accounted for in child spans, like what happens in the idle transaction Tracing integration, where we finish the\n   * transaction after a given \"idle time\" and we don't want this \"idle time\" to be part of the transaction.\n   */\n  trimEnd?: boolean;\n\n  /**\n   * If this transaction has a parent, the parent's sampling decision\n   */\n  parentSampled?: boolean;\n}\n\n/**\n * Data pulled from a `sentry-trace` header\n */\nexport type TraceparentData = Pick<TransactionContext, 'traceId' | 'parentSpanId' | 'parentSampled'>;\n\n/**\n * Transaction \"Class\", inherits Span only has `setName`\n */\nexport interface Transaction extends TransactionContext, Span {\n  /**\n   * @inheritDoc\n   */\n  spanId: string;\n\n  /**\n   * @inheritDoc\n   */\n  traceId: string;\n\n  /**\n   * @inheritDoc\n   */\n  startTimestamp: number;\n\n  /**\n   * @inheritDoc\n   */\n  tags: { [key: string]: Primitive };\n\n  /**\n   * @inheritDoc\n   */\n  data: { [key: string]: any };\n\n  /**\n   * Set the name of the transaction\n   */\n  setName(name: string): void;\n\n  /** Returns the current transaction properties as a `TransactionContext` */\n  toContext(): TransactionContext;\n\n  /** Updates the current transaction with a new `TransactionContext` */\n  updateWithContext(transactionContext: TransactionContext): this;\n}\n\n/**\n * Context data passed by the user when starting a transaction, to be used by the tracesSampler method.\n */\nexport interface CustomSamplingContext {\n  [key: string]: any;\n}\n\n/**\n * Data passed to the `tracesSampler` function, which forms the basis for whatever decisions it might make.\n *\n * Adds default data to data provided by the user. See {@link Hub.startTransaction}\n */\nexport interface SamplingContext extends CustomSamplingContext {\n  /**\n   * Context data with which transaction being sampled was created\n   */\n  transactionContext: TransactionContext;\n\n  /**\n   * Sampling decision from the parent transaction, if any.\n   */\n  parentSampled?: boolean;\n\n  /**\n   * Object representing the URL of the current page or worker script. Passed by default when using the `BrowserTracing`\n   * integration.\n   */\n  location?: WorkerLocation;\n\n  /**\n   * Object representing the incoming request to a node server. Passed by default when using the TracingHandler.\n   */\n  request?: ExtractedNodeRequestData;\n}\n\nexport type Measurements = Record<string, { value: number }>;\n\nexport enum TransactionSamplingMethod {\n  Explicit = 'explicitly_set',\n  Sampler = 'client_sampler',\n  Rate = 'client_rate',\n  Inheritance = 'inheritance',\n}\n"],
  "mappings": "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",
  "names": ["global", "d", "b", "__assign", "SentryError", "Dsn", "global", "Logger", "Memo", "global", "global", "_i", "States", "SyncPromise", "resolve", "PromiseBuffer", "resolve", "Severity", "Status", "LogLevel", "SessionStatus", "TransactionSamplingMethod"]
}
