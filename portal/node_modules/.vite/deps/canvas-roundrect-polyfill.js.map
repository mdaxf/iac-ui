{
  "version": 3,
  "sources": ["../../canvas-roundrect-polyfill/roundRect.js"],
  "sourcesContent": ["/*\n *  Implements the .roundRect() method of the CanvasPath mixin\n *  as introduced by https://github.com/whatwg/html/pull/6765\n */\n(() => {\n\n  \"use strict\";\n\n  Path2D.prototype.roundRect ??= roundRect;\n  if (globalThis.CanvasRenderingContext2D) {\n\n    globalThis.CanvasRenderingContext2D.prototype.roundRect ??= roundRect;\n\n  }\n  if (globalThis.OffscreenCanvasRenderingContext2D) {\n\n    globalThis.OffscreenCanvasRenderingContext2D.prototype.roundRect ??= roundRect;\n\n  }\n\n  function roundRect(x, y, w, h, radii) {\n\n    if (!([x, y, w, h].every((input) => Number.isFinite(input)))) {\n\n      return;\n\n    }\n\n    radii = parseRadiiArgument(radii);\n\n    let upperLeft, upperRight, lowerRight, lowerLeft;\n\n    if (radii.length === 4) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerRight = toCornerPoint(radii[2]);\n      lowerLeft = toCornerPoint(radii[3]);\n\n    } else if (radii.length === 3) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerLeft = toCornerPoint(radii[1]);\n      lowerRight = toCornerPoint(radii[2]);\n\n    } else if (radii.length === 2) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      lowerRight = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerLeft = toCornerPoint(radii[1]);\n\n    } else if (radii.length === 1) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[0]);\n      lowerRight = toCornerPoint(radii[0]);\n      lowerLeft = toCornerPoint(radii[0]);\n\n    } else {\n\n      throw new RangeError(`${ getErrorMessageHeader(this) } ${ radii.length } is not a valid size for radii sequence.`);\n\n    }\n\n    const corners = [upperLeft, upperRight, lowerRight, lowerLeft];\n    const negativeCorner = corners.find(({x, y}) => x < 0 || y < 0);\n    const negativeValue = negativeCorner?.x < 0 ? negativeCorner.x : negativeCorner?.y\n\n    if (corners.some(({x, y}) => !Number.isFinite(x) || !Number.isFinite(y))) {\n\n      return;\n\n    }\n\n    if (negativeCorner) {\n\n      throw new RangeError(`${ getErrorMessageHeader(this) } Radius value ${ negativeCorner } is negative.`);\n\n    }\n\n    fixOverlappingCorners(corners);\n\n    if (w < 0 && h < 0) {\n\n      this.moveTo(x - upperLeft.x, y);\n      this.ellipse(x + w + upperRight.x, y - upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI * 1.5, -Math.PI);\n      this.ellipse(x + w + lowerRight.x, y + h + lowerRight.y, lowerRight.x, lowerRight.y, 0, -Math.PI, -Math.PI / 2);\n      this.ellipse(x - lowerLeft.x, y + h + lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, -Math.PI / 2, 0);\n      this.ellipse(x - upperLeft.x, y - upperLeft.y, upperLeft.x, upperLeft.y, 0, 0, -Math.PI / 2);\n\n    } else if (w < 0) {\n\n      this.moveTo(x - upperLeft.x, y);\n      this.ellipse(x + w + upperRight.x, y + upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI / 2, -Math.PI, 1);\n      this.ellipse(x + w + lowerRight.x, y + h - lowerRight.y, lowerRight.x, lowerRight.y, 0, -Math.PI, -Math.PI * 1.5, 1);\n      this.ellipse(x - lowerLeft.x, y + h - lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, Math.PI / 2, 0, 1);\n      this.ellipse(x - upperLeft.x, y + upperLeft.y, upperLeft.x, upperLeft.y, 0, 0, -Math.PI / 2, 1);\n\n    } else if (h < 0) {\n\n      this.moveTo(x + upperLeft.x, y);\n      this.ellipse(x + w - upperRight.x, y - upperRight.y, upperRight.x, upperRight.y, 0, Math.PI / 2, 0, 1);\n      this.ellipse(x + w - lowerRight.x, y + h + lowerRight.y, lowerRight.x, lowerRight.y, 0, 0, -Math.PI / 2, 1);\n      this.ellipse(x + lowerLeft.x, y + h + lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, -Math.PI / 2, -Math.PI, 1);\n      this.ellipse(x + upperLeft.x, y - upperLeft.y, upperLeft.x, upperLeft.y, 0, -Math.PI, -Math.PI * 1.5, 1);\n\n    } else {\n\n      this.moveTo(x + upperLeft.x, y);\n      this.ellipse(x + w - upperRight.x, y + upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI / 2, 0);\n      this.ellipse(x + w - lowerRight.x, y + h - lowerRight.y, lowerRight.x, lowerRight.y, 0, 0, Math.PI / 2);\n      this.ellipse(x + lowerLeft.x, y + h - lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, Math.PI / 2, Math.PI);\n      this.ellipse(x + upperLeft.x, y + upperLeft.y, upperLeft.x, upperLeft.y, 0, Math.PI, Math.PI * 1.5);\n\n    }\n\n    this.closePath();\n    this.moveTo(x, y);\n\n    function toDOMPointInit(value) {\n\n      const {x, y, z, w} = value;\n      return {x, y, z, w};\n\n    }\n\n    function parseRadiiArgument(value) {\n\n      // https://webidl.spec.whatwg.org/#es-union\n      // with 'optional (unrestricted double or DOMPointInit\n      //   or sequence<(unrestricted double or DOMPointInit)>) radii = 0'\n      const type = typeof value;\n\n      if (type === \"undefined\" || value === null) {\n\n        return [0];\n\n      }\n      if (type === \"function\") {\n\n        return [NaN];\n\n      }\n      if (type === \"object\") {\n\n        if (typeof value[Symbol.iterator] === \"function\") {\n\n          return [...value].map((elem) => {\n            // https://webidl.spec.whatwg.org/#es-union\n            // with '(unrestricted double or DOMPointInit)'\n            const elemType = typeof elem;\n            if (elemType === \"undefined\" || elem === null) {\n              return 0;\n            }\n            if (elemType === \"function\") {\n              return NaN;\n            }\n            if (elemType === \"object\") {\n              return toDOMPointInit(elem);\n            }\n            return toUnrestrictedNumber(elem);\n          });\n\n        }\n\n        return [toDOMPointInit(value)];\n\n      }\n\n      return [toUnrestrictedNumber(value)];\n\n    }\n\n    function toUnrestrictedNumber(value) {\n\n      return +value;\n\n    }\n\n    function toCornerPoint(value) {\n\n      const asNumber = toUnrestrictedNumber(value);\n      if (Number.isFinite(asNumber)) {\n\n        return {\n          x: asNumber,\n          y: asNumber\n        };\n\n      }\n      if (Object(value) === value) {\n\n        return {\n          x: toUnrestrictedNumber(value.x ?? 0),\n          y: toUnrestrictedNumber(value.y ?? 0)\n        };\n\n      }\n\n      return {\n        x: NaN,\n        y: NaN\n      };\n\n    }\n\n    function fixOverlappingCorners(corners) {\n\n      const [upperLeft, upperRight, lowerRight, lowerLeft] = corners;\n      const factors = [\n        Math.abs(w) / (upperLeft.x + upperRight.x),\n        Math.abs(h) / (upperRight.y + lowerRight.y),\n        Math.abs(w) / (lowerRight.x + lowerLeft.x),\n        Math.abs(h) / (upperLeft.y + lowerLeft.y)\n      ];\n      const minFactor = Math.min(...factors);\n      if (minFactor <= 1) {\n\n        for (const radii of corners) {\n\n          radii.x *= minFactor;\n          radii.y *= minFactor;\n\n        }\n\n      }\n\n    }\n\n  }\n\n  function getErrorMessageHeader(instance) {\n\n    return `Failed to execute 'roundRect' on '${ getConstructorName(instance) }':`;\n\n  }\n\n  function getConstructorName(instance) {\n\n    return Object(instance) === instance &&\n      instance instanceof Path2D ? \"Path2D\" :\n      instance instanceof globalThis?.CanvasRenderingContext2D ? \"CanvasRenderingContext2D\" :\n      instance instanceof globalThis?.OffscreenCanvasRenderingContext2D ? \"OffscreenCanvasRenderingContext2D\" :\n      instance?.constructor.name ||\n      instance;\n\n  }\n\n})();\n"],
  "mappings": "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",
  "names": ["x", "y", "w", "corners", "upperLeft", "upperRight", "lowerRight", "lowerLeft", "radii"]
}
